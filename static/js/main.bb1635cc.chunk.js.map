{"version":3,"sources":["Redux/reducer.js","Redux/combineReducers.js","firebase.js","store.js","components/Auth.js","pages/SignIn.js","Redux/actions.js","img/m200.jpg","img/m2001.jpg","pages/MainPage.js","components/Services.js","components/Form.js","pages/PrinterDetails.js","pages/AllServices.js","components/PrivateRoute.js","logo.svg","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","step","printers","rootReducer","combineReducers","firestore","firestoreReducer","appReducer","state","action","type","payload","data","currentPrinter","id","app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","composeWithDevTools","reduxFirestore","applyMiddleware","thunk","withExtraArgument","getFirebase","getFirestore","Auth","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","auth","onAuthStateChanged","user","Provider","value","withRouter","history","errorMessage","setErrorMessage","isChecked","setIsChecked","email","password","formData","setFormData","checkbox","localStorage","getItem","console","log","updateFormData","event","target","name","handleLogin","useCallback","a","preventDefault","setItem","removeItem","signInWithEmailAndPassword","push","code","message","useContext","to","className","style","backgroundImage","backgroundRepeat","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","e","Check","checked","label","Button","variant","fetchPrinters","dispatch","collection","get","then","querySnapshot","forEach","doc","connect","ownProps","cleanPrinters","useHistory","isLoaded","setIsLoaded","Container","Row","map","printer","Col","md","Card","m200plus","Body","Title","serial","Text","onClick","handleClick","Services","dateOfService","scopeOfWork","attentions","newServiceRequest","serviceDate","Date","seconds","toLocaleDateString","Fragment","index","done","printerId","addServiceRequest","description","update","services","FieldValue","arrayUnion","show","handleClose","setDescription","Modal","onHide","animation","Header","closeButton","as","class","for","rows","Footer","handleSubmit","match","params","product","getCurrentPrinter","where","uniqid","require","useMemo","Object","keys","length","setShow","Jumbotron","xs","Image","width","src","rounded","Table","striped","bordered","hover","size","role","service","item","PrivateRoute","RouteComponent","component","rest","render","routeProps","TopNav","setUser","Navbar","bg","Brand","href","logo","alt","Nav","Collapse","signOut","App","config","useFirestoreForProfile","userProfile","createFirestoreInstance","exact","path","PrinterDetails","MainPage","AllServices","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb1635cc.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    step: 0,\r\n    printers: [\r\n\r\n    ]\r\n}\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'FETCH_PRINTERS': {\r\n            return {\r\n                ...state,\r\n                printers: [...state.printers, action.payload.data],\r\n            }\r\n        }\r\n        case 'CLEAN_PRINTERS': {\r\n            return {\r\n                ...state,\r\n                printers: [],\r\n            }\r\n        }\r\n        case 'GET_CURRENT_PRINTER': {\r\n            return {\r\n                ...state,\r\n                currentPrinter: action.payload.data(),\r\n                id: action.payload.id\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport appReducer from '../Redux/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    firestore: firestoreReducer,\r\n    appReducer\r\n})\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\n\r\nexport default app;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './Redux/combineReducers';\r\nimport app from \"./firebase.js\";\r\nimport thunk from \"redux-thunk\";\r\nimport 'firebase/firestore'\r\nimport {\r\n    getFirebase,\r\n} from \"react-redux-firebase\";\r\nimport { reduxFirestore } from 'redux-firestore';\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    reduxFirestore(app),\r\n    applyMiddleware(\r\n        thunk.withExtraArgument({\r\n            getFirebase,\r\n            getFirestore: () => getFirebase().firestore()\r\n        })\r\n    ),\r\n));\r\n\r\nexport default store;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport app from \"../firebase.js\";\r\n\r\nexport const Auth = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [pending, setPending] = useState(true);\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged((user) => {\r\n            setCurrentUser(user)\r\n            setPending(false)\r\n        });\r\n    }, []);\r\n\r\n    if (pending) {\r\n        return <>Ładowanie...</>\r\n    }\r\n\r\n    return (\r\n        <Auth.Provider\r\n            value={{\r\n                currentUser: currentUser\r\n            }}\r\n        >\r\n            {children}\r\n        </Auth.Provider>\r\n    );\r\n};","import React, { useCallback, useContext, useState, useEffect } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport app from '../firebase';\r\nimport { Auth } from '../components/Auth';\r\nimport { withRouter, Redirect } from 'react-router';\r\n\r\n\r\nconst SignIn = ({ history }) => {\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [isChecked, setIsChecked] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        const checkbox = localStorage.getItem('checkbox')\r\n        console.log(checkbox)\r\n        if (checkbox) {\r\n            setFormData({\r\n                ...formData,\r\n                email: localStorage.getItem('userName'),\r\n                password: localStorage.getItem('password')\r\n            });\r\n            setIsChecked(true)\r\n        }\r\n        console.log(isChecked)\r\n        return {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const updateFormData = (event) => {\r\n        setFormData({\r\n            ...formData,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    const handleLogin = useCallback(async event => {\r\n        event.preventDefault();\r\n        // const { email, password } = formData;\r\n\r\n        if (isChecked) {\r\n            localStorage.setItem('userName', formData.email);\r\n            localStorage.setItem('password', formData.password);\r\n            localStorage.setItem('checkbox', true);\r\n            setIsChecked(true)\r\n        } else {\r\n            localStorage.removeItem('userName');\r\n            localStorage.removeItem('password');\r\n            localStorage.removeItem('checkbox');\r\n            setIsChecked(false)\r\n        }\r\n\r\n        try {\r\n            await app\r\n                .auth()\r\n                .signInWithEmailAndPassword(formData.email, formData.password);\r\n            history.push(\"/main\");\r\n        } catch (error) {\r\n            // console.log(error);\r\n            switch (error.code) {\r\n                case 'auth/invalid-email':\r\n                    setErrorMessage('Niepoprawny adres email')\r\n                    break;\r\n                case 'auth/wrong-password':\r\n                    setErrorMessage('Nieprawidłowe hasło')\r\n                    break;\r\n                case 'auth/user-not-found':\r\n                    setErrorMessage('Taki użytkownik nie istnieje')\r\n                    break;\r\n                default:\r\n                    console.log(error.message)\r\n            }\r\n        }\r\n    }, [history, isChecked, formData]);\r\n\r\n    const { currentUser } = useContext(Auth);\r\n\r\n    if (currentUser) {\r\n        return <Redirect to=\"/main\" />\r\n    }\r\n\r\n\r\n    return (\r\n        <main className=\"signin\" style={{\r\n            backgroundImage: `linear-gradient(#f9fafb, #f9fafbcc), url(/images/bg1.jpg)`,\r\n            backgroundRepeat: 'no-repeat',\r\n            'backgroundSize': 'cover',\r\n        }}>\r\n            <Form className=\"form-signin\" onSubmit={handleLogin}>\r\n                <h1 className=\"h3 mb-3 fw-normal\">Zaloguj się</h1>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Adres Email</Form.Label>\r\n                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Wpisz adres email...\" value={formData.email} onChange={e => updateFormData(e)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Hasło</Form.Label>\r\n                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Wpisz hasło...\" value={formData.password} onChange={e => updateFormData(e)} />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>{errorMessage}</Form.Label>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check checked={isChecked} type=\"checkbox\" onChange={() => setIsChecked(!isChecked)} label=\"Zapamiętaj mnie\" className=\"checkbox mb-3 mt-3\" />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"w-100 btn btn-lg btn-primary\">\r\n                    Zaloguj\r\n            </Button>\r\n            </Form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignIn);","import { getFirestore } from 'redux-firestore';\r\n\r\nexport function fetchPrinters() {\r\n    return (dispatch) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('printers').get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                dispatch({\r\n                    type: 'FETCH_PRINTERS',\r\n                    payload: {\r\n                        data: doc.data(),\r\n                        id: doc.id\r\n                    }\r\n                })\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function cleanPrinters() {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'CLEAN_PRINTERS',\r\n            payload: []\r\n        })\r\n    }\r\n}\r\n\r\nexport function getCurrentPrinter(id) {\r\n    return (dispatch) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('printers').where(\"serial\", \"==\", id).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                dispatch({\r\n                    type: 'GET_CURRENT_PRINTER',\r\n                    payload: doc\r\n                })\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function addServiceRequest(id, description) {\r\n    return (dispatch) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('printers').doc(id).update({\r\n            services: firestore.FieldValue.arrayUnion(\r\n                {\r\n                    newServiceRequest: true,\r\n                    dateOfService: new Date(),\r\n                    attentions: description,\r\n                    scopeOfWork: [],\r\n\r\n                }\r\n            )\r\n        })\r\n\r\n        dispatch({\r\n            type: 'ADD_SERVICE_REQUEST',\r\n            payload: 'fdfdsfds'\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/m200.98415883.jpg\";","export default __webpack_public_path__ + \"static/media/m2001.904cb060.jpg\";","import React, { useEffect, useState } from 'react'\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPrinters, cleanPrinters } from '../Redux/actions'\r\nimport { useHistory } from 'react-router-dom';\r\nimport m200plus from '../img/m200.jpg'\r\nimport m200 from '../img/m2001.jpg'\r\n\r\n\r\nconst MainPage = ({ fetchPrinters, cleanPrinters, printers }) => {\r\n    let history = useHistory();\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!isLoaded) {\r\n            fetchPrinters();\r\n            console.log('FETCH PRINTERS')\r\n            setIsLoaded(true)\r\n        }\r\n        return () => {\r\n            cleanPrinters();\r\n        };\r\n    }, [fetchPrinters, cleanPrinters, isLoaded]);\r\n\r\n    const handleClick = (printer) => {\r\n        history.push(`/printers/${printer.serial}`)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {printers.map(printer => (\r\n                    <Col key={printer.serial} md={4} className=\"mt-4\">\r\n                        <Card style={{ backgroundImage: `url(${m200plus})` }} className=\"card card-cover h-100 overflow-hidden text-white rounded-5 shadow-lg\">\r\n                            <Card.Body className=\"card-body d-flex flex-column h-100 p-5 text-white text-shadow-1\">\r\n                                <Card.Title>SERIAL: {printer.serial}</Card.Title>\r\n                                <Card.Text className=\"card-text pt-5 mt-5 mb-4 display-6 lh-1 fw-bold\">\r\n                                    {printer.name}\r\n                                </Card.Text>\r\n                                <Button onClick={() => handleClick(printer)} variant=\"btn btn-outline-secondary\">Zgłoś serwis</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchPrinters: () => dispatch(fetchPrinters()),\r\n        cleanPrinters: () => dispatch(cleanPrinters()),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const { printers } = state.appReducer\r\n    return {\r\n        printers: printers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\r\n","import React from 'react';\r\n\r\nfunction Services(data) {\r\n    const { dateOfService, scopeOfWork, attentions, newServiceRequest } = data.data;\r\n    console.log(newServiceRequest)\r\n\r\n    const serviceDate = new Date(dateOfService.seconds * 1000).toLocaleDateString()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <tbody className={newServiceRequest ? \"bg-primary\" : null}>\r\n                <tr>\r\n                    <td>{data.index + 1}</td>\r\n                    <td>{serviceDate}</td>\r\n                    <td>\r\n                        {newServiceRequest ? <p>Nowe zgłoszenie serwisowe</p> :\r\n                            <ul>\r\n                                {scopeOfWork.map(done => (<li>{done}</li>))}\r\n                            </ul>}\r\n                    </td>\r\n                    <td>{attentions ? attentions : 'brak uwag'}</td>\r\n                </tr>\r\n            </tbody>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Services;","import React, { useState } from 'react';\r\nimport { Button, Modal, Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addServiceRequest } from '../Redux/actions';\r\n\r\n\r\nfunction Form({ show, handleClose, printer, addServiceRequest, printerId }) {\r\n    const [description, setDescription] = useState();\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addServiceRequest(printerId, description);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose} animation={false}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Zgłoszenie serwisowe</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body as=\"div\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <form>\r\n                                    <div class=\"mb-3\">\r\n                                        <h3>Model drukarki: {printer ? printer.name : 'ładowanie...'}</h3>\r\n                                        <h3>Numer seryjny: {printer ? printer.serial : 'ładowanie...'}</h3>\r\n                                    </div>\r\n                                    <div class=\"mb-3\">\r\n                                        <label for=\"exampleInputPassword1\" class=\"form-label\">Napisz co nie działa</label>\r\n                                        <textarea onChange={(e) => setDescription(e.target.value)} class=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\"></textarea>\r\n                                    </div>\r\n                                </form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Zamknij\r\n            </Button>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={(e) => handleSubmit(e)}>\r\n                        Wyślij zgłoszenie\r\n            </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n    return {\r\n        addServiceRequest: (printerId, description) => dispatch(addServiceRequest(printerId, description)),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        printerId: state.appReducer.id\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import React, { useEffect, useMemo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter as useParams } from \"react-router-dom\";\r\nimport { getCurrentPrinter } from '../Redux/actions';\r\nimport { Jumbotron, Button, Table, Col, Image, Container, Row } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport Services from '../components/Services';\r\nimport Form from '../components/Form';\r\n\r\nconst PrinterDetails = ({ printerId, getCurrentPrinter, printer }) => {\r\n    let uniqid = require('uniqid');\r\n\r\n    useEffect(() => {\r\n        getCurrentPrinter();\r\n    }, [getCurrentPrinter]);\r\n\r\n    const isLoaded = useMemo(() => printer && Object.keys(printer).length !== 0, [printer])\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    console.log(uniqid())\r\n    return (\r\n        <React.Fragment>\r\n            {isLoaded ?\r\n                <>\r\n                    <Jumbotron>\r\n                        <Container>\r\n                            <Row>\r\n                                <Col xs={6} md={4}>\r\n                                    <Image style={{ width: '100%' }} src=\"https://images-na.ssl-images-amazon.com/images/I/61aiRuGPewL._SL1500_.jpg\" rounded />\r\n                                </Col>\r\n                                <Col xs={6} md={4}>\r\n                                    <h1>{isLoaded ? printer.name : \"nie załadowano\"}</h1>\r\n                                    <h3>\r\n                                        SERIAL: {isLoaded ? printer.serial : \"nie działa\"}\r\n                                    </h3>\r\n                                    <p>\r\n                                        <Button variant=\"primary\" onClick={handleShow}>Zgłoś serwis</Button>\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Jumbotron>\r\n\r\n                    <Form show={show} handleClose={handleClose} printer={printer} />\r\n\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Data Serwisu</th>\r\n                                <th>Zakres prac</th>\r\n                                <th>Uwagi</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {isLoaded ? printer.services ? printer.services.map((data, index) => (\r\n                            <Services key={uniqid()} index={index} data={data} />\r\n                        )) : <tbody><tr><td>brak danych</td></tr></tbody> : \"nie działa\"}\r\n                    </Table>\r\n                </>\r\n                :\r\n                <div class=\"spinner-border\" role=\"status\">\r\n                    <span class=\"sr-only\"></span>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const id = ownProps.match.params.product\r\n    return {\r\n        getCurrentPrinter: () => dispatch(getCurrentPrinter(id)),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    let id = ownProps.match.params\r\n    console.log(state)\r\n    return {\r\n        printerId: id,\r\n        printer: state.appReducer.currentPrinter\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PrinterDetails)\r\n","import React, { useEffect } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPrinters, cleanPrinters } from '../Redux/actions';\r\n\r\n\r\nconst AllServices = ({ fetchPrinters, cleanPrinters, printers }) => {\r\n\r\n    useEffect(() => {\r\n        fetchPrinters();\r\n        return () => {\r\n            cleanPrinters();\r\n        };\r\n    }, [fetchPrinters, cleanPrinters]);\r\n\r\n    return (\r\n        <div className=\"mt-5\">\r\n            {printers.map(printer => (\r\n                <>\r\n                    <h1>{printer.name} - {printer.serial}</h1>\r\n                    <Table striped bordered hover size=\"sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Data Serwisu</th>\r\n                                <th>Zakres prac</th>\r\n                                <th>Uwagi</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {printer.services.map(service => (\r\n                                <tr>\r\n                                    <td>{new Date(service.dateOfService.seconds * 1000).toLocaleDateString()}</td>\r\n                                    <td>\r\n                                        <ul>\r\n                                            {service.scopeOfWork >= 0 ? null :\r\n                                                service.scopeOfWork.map((item, index) => (\r\n                                                    <li key={index}>{item}</li>\r\n                                                ))\r\n                                            }\r\n                                        </ul>\r\n                                    </td>\r\n                                    <td>{service.attentions}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchPrinters: () => dispatch(fetchPrinters()),\r\n        cleanPrinters: () => dispatch(cleanPrinters()),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    const { printers } = state.appReducer\r\n    return {\r\n        printers: printers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllServices)","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { Auth } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const { currentUser } = useContext(Auth);\r\n    console.log(!!currentUser)\r\n    console.log(rest)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                        <Redirect to={\"/login\"} />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default PrivateRoute","export default __webpack_public_path__ + \"static/media/logo.0ee4273f.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { Button, Nav, Navbar, Container } from 'react-bootstrap';\r\nimport app from \"../firebase.js\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport logo from '../logo.svg'\r\n\r\nexport default function TopNav() {\r\n    const [user, setUser] = useState()\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                setUser(user)\r\n            } else {\r\n                setUser(null)\r\n            }\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {user &&\r\n                <Navbar bg=\"light\" variant=\"light\">\r\n                    <Container>\r\n                        <Navbar.Brand className=\"ml-auto\" href=\"/main\">\r\n                            <img className=\"brand-logo\" src={logo} alt=\"serwis drkarek 3D\" />\r\n                        </Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                            <Link className=\"nav-link\" to=\"/details\">Wszystkie serwisy</Link>\r\n                            <Link className=\"nav-link\" to=\"/main\">Drukarki</Link>\r\n                        </Nav>\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Button onClick={() => app.auth().signOut()} variant=\"outline-primary\">Wyloguj</Button>\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\nimport React, { useState } from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { Container, Row } from 'react-bootstrap';\nimport SignIn from \"./pages/SignIn\";\nimport { AuthProvider } from \"./components/Auth\";\nimport app from \"./firebase.js\";\nimport MainPage from './pages/MainPage';\nimport PrinterDetails from './pages/PrinterDetails';\nimport AllServices from './pages/AllServices'\nimport PrivateRoute from './components/PrivateRoute';\nimport TopNav from './components/Navbar';\nimport {\n  ReactReduxFirebaseProvider,\n  createFirestoreInstance\n} from \"react-redux-firebase\";\nimport 'firebase/database';\n\n\n\nfunction App() {\n  const [user, setUser] = useState()\n\n  app.auth().onAuthStateChanged(function (user) {\n    if (user) {\n      setUser(user)\n    } else {\n      setUser(null)\n    }\n  });\n\n\n  return (\n    <Router>\n      <Provider store={store}>\n        <ReactReduxFirebaseProvider\n          firebase={app}\n          config={{\n            useFirestoreForProfile: true,\n            userProfile: \"printers\",\n            createFirestoreInstance,\n          }}\n          dispatch={store.dispatch}\n          createFirestoreInstance={createFirestoreInstance}\n        >\n          <AuthProvider>\n            {user && <TopNav />}\n            {!user ? <Redirect to=\"/main\" /> : null}\n            <Switch>\n              <>\n                <Route exact path=\"/login\">\n                  <SignIn />\n                </Route>\n                <Container>\n                  <Row>\n                    <PrivateRoute path=\"/printers/:product\" component={PrinterDetails} />\n                    <PrivateRoute path=\"/main\" component={MainPage} />\n                    <PrivateRoute path=\"/details\" component={AllServices} />\n                  </Row>\n                </Container>\n              </>\n            </Switch>\n          </AuthProvider>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}